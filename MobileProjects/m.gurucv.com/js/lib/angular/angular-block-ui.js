/*!
   angular-block-ui v0.1.0-beta.1
   (c) 2014 (null) McNull https://github.com/McNull/angular-block-ui
   License: MIT
*/
!function (t) { var e = t.module("blockUI", []); e.config(["$provide", "$httpProvider", function (t, e) { t.decorator("$exceptionHandler", ["$delegate", "$injector", function (t, e) { var n, o; return function (c, r) { o = o || e.get("blockUIConfig"), o.resetOnException && (n = n || e.get("blockUI"), n.instances.reset()), t(c, r) } }]), e.interceptors.push("blockUIHttpInterceptor") }]), e.run(["$document", "blockUIConfig", "$templateCache", function (t, e, n) { e.autoInjectBodyBlock && t.find("body").attr("block-ui", "main"), e.template && (e.templateUrl = "$$block-ui-template$$", n.put(e.templateUrl, e.template)) }]), e.directive("blockUiContainer", ["blockUIConfig", "blockUiContainerLinkFn", function (t, e) { return { scope: !0, restrict: "A", templateUrl: t.templateUrl, compile: function () { return e } } }]).factory("blockUiContainerLinkFn", ["blockUI", "blockUIUtils", function () { return function (t, e) { var n = e.inheritedData("block-ui"); if (!n) throw new Error("No parent block-ui service instance located."); t.state = n.state() } }]), e.directive("blockUi", ["blockUiCompileFn", function (t) { return { scope: !0, restrict: "A", compile: t } }]).factory("blockUiCompileFn", ["blockUiPreLinkFn", function (t) { return function (e) { return e.append('<div block-ui-container class="block-ui-container"></div>'), { pre: t } } }]).factory("blockUiPreLinkFn", ["blockUI", "blockUIUtils", "blockUIConfig", function (t, e, n) { return function (o, c, r) { c.hasClass("block-ui") || c.addClass(n.cssClass), r.$observe("blockUiMessageClass", function (t) { o.$_blockUiMessageClass = t }); var i = r.blockUi || "_" + o.$id, a = t.instances.get(i); if ("main" === i) var l = o.$on("$viewContentLoaded", function () { l(), o.$on("$locationChangeStart", function (t) { a.state().blockCount > 0 && t.preventDefault() }) }); else { var s = c.inheritedData("block-ui"); s && (a._parent = s) } o.$on("$destroy", function () { a.release() }), a.addRef(), o.$_blockUiState = a.state(), o.$watch("$_blockUiState.blocking", function (t) { c.attr("aria-busy", !!t), c.toggleClass("block-ui-visible", !!t) }), o.$watch("$_blockUiState.blockCount > 0", function (t) { c.toggleClass("block-ui-active", !!t) }); var u = r.blockUiPattern; if (u) { var f = e.buildRegExp(u); a.pattern(f) } c.data("block-ui", a) } }]), e.constant("blockUIConfig", { templateUrl: "angular-block-ui/angular-block-ui.ng.html", delay: 250, message: "Loading ...", autoBlock: !0, resetOnException: !0, requestFilter: t.noop, autoInjectBodyBlock: !0, cssClass: "block-ui block-ui-anim-fade" }), e.factory("blockUIHttpInterceptor", ["$q", "$injector", "blockUIConfig", function (t, e, n) { function o() { i = i || e.get("blockUI") } function c(t) { n.autoBlock && !t.$_noBlock && t.$_blocks && (o(), t.$_blocks.stop()) } function r(e) { return c(e.config), t.reject(e) } var i; return { request: function (t) { return n.autoBlock && (n.requestFilter(t) === !1 ? t.$_noBlock = !0 : (o(), t.$_blocks = i.instances.locate(t), t.$_blocks.start())), t }, requestError: r, response: function (t) { return c(t.config), t }, responseError: r } }]), e.factory("blockUI", ["blockUIConfig", "$timeout", "blockUIUtils", "$document", function (e, n, o, c) { function r(r) { var a, s = this, u = { id: r, blockCount: 0, message: e.message, blocking: !1 }, f = []; this._refs = 0, this.start = function (r) { r = u.blockCount > 0 ? r || u.message || e.message : r || e.message, u.message = r, u.blockCount++; var i = t.element(c[0].activeElement); i.length && o.isElementInBlockScope(i, s) && (s._restoreFocus = i[0], n(function () { s._restoreFocus && s._restoreFocus.blur() })), a || (a = n(function () { a = null, u.blocking = !0 }, e.delay)) }, this._cancelStartTimeout = function () { a && (n.cancel(a), a = null) }, this.stop = function () { u.blockCount = Math.max(0, --u.blockCount), 0 === u.blockCount && s.reset(!0) }, this.message = function (t) { u.message = t }, this.pattern = function (t) { return void 0 !== t && (s._pattern = t), s._pattern }, this.reset = function (e) { s._cancelStartTimeout(), u.blockCount = 0, u.blocking = !1, !s._restoreFocus || c[0].activeElement && c[0].activeElement !== i[0] || (s._restoreFocus.focus(), s._restoreFocus = null); try { e && t.forEach(f, function (t) { t() }) } finally { f.length = 0 } }, this.done = function (t) { f.push(t) }, this.state = function () { return u }, this.addRef = function () { s._refs += 1 }, this.release = function () { --s._refs <= 0 && l.instances._destroy(s) } } var i = c.find("body"), a = []; a.get = function (t) { var e = a[t]; return e || (e = a[t] = new r(t), a.push(e)), e }, a._destroy = function (e) { if (t.isString(e) && (e = a[e]), e) { e.reset(), delete a[e.state().id]; for (var n = a.length; --n;) if (a[n] === e) { a.splice(n, 1); break } } }, a.locate = function (t) { var e = []; o.forEachFnHook(e, "start"), o.forEachFnHook(e, "stop"); for (var n = a.length; n--;) { var c = a[n], r = c._pattern; r && r.test(t.url) && e.push(c) } return 0 === e.length && e.push(l), e }, o.forEachFnHook(a, "reset"); var l = a.get("main"); return l.addRef(), l.instances = a, l }]), e.factory("blockUIUtils", function () { var e = t.element, n = { buildRegExp: function (t) { var e, n = t.match(/^\/(.*)\/([gim]*)$/); if (!n) throw Error("Incorrect regular expression format: " + t); return e = new RegExp(n[1], n[2]) }, forEachFn: function (t, e, n) { for (var o = t.length; o--;) { var c = t[o]; c[e].apply(c, n) } }, forEachFnHook: function (t, e) { t[e] = function () { n.forEachFn(this, e, arguments) } }, isElementInBlockScope: function (t, e) { for (var n = t.inheritedData("block-ui") ; n;) { if (n === e) return !0; n = n._parent } return !1 }, findElement: function (t, o, c) { var r = null; if (o(t)) r = t; else { var i; i = c ? t.parent() : t.children(); for (var a = i.length; !r && a--;) r = n.findElement(e(i[a]), o, c) } return r } }; return n }), t.module("blockUI").run(["$templateCache", function (t) { t.put("angular-block-ui/angular-block-ui.ng.html", '<div class="block-ui-overlay"></div><div class="block-ui-message-container" aria-live="assertive" aria-atomic="true"><div class="block-ui-message" ng-class="$_blockUiMessageClass">{{ state.message }}</div></div>') }]) }(angular);